
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##############################################################################################
> #     Running Barker's alogrithm to find the optimal proposal variance. The target is 
> #     an ill-conditioned 50 dimensional Gaussian distribution with mean 0. The eigenvalues
> #     of the covariance matrix are evenly spaced over the interval [0.1, 100]. Proposals are
> #     also Gaussian with iid components with variance l^2/d. The aim will be to find the
> #     optimal value of l by minimizing the first order auto-correlations.
> ##############################################################################################
> 
> 
> ########### Defining Target ##################
> 
> #install.packages("randcorr")
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> library(randcorr)   # Generating a random Correlation matrix
> 
> d = 50
> v <- seq(0.1, 1, length.out = 30)
> v <- c(v , seq(2, 100, length.out = 20))
> 
> set.seed(0)
> P <- randcorr(d)
> E <- diag(sqrt(v))%*%P%*%diag(sqrt(v))   # E is the covariance matrix
> 
> S <- eigen(E)         
> 
> # Suppose E_inv = t(L)%*%L is the inverse of the civariance matrix of our target distribution
> # then L is given in the next line. We only store L since that is all we would need.
> 
> L <- diag(sqrt(1/S$values))%*%t(S$vectors)
> 
> 
> library(mcmcse)
mcmcse: Monte Carlo Standard Errors for MCMC
Version 1.4-1 created on 2020-01-29.
copyright (c) 2012, James M. Flegal, University of California, Riverside
                    John Hughes, University of Colorado, Denver
                    Dootika Vats, University of Warwick
                    Ning Dai, University of Minnesota
 For citation information, type citation("mcmcse").
 Type help("mcmcse-package") to get started.

> library(mvtnorm)
> library(tictoc)
> 
> sampler <- function(samp, ar_step, init, sigma){
+  
+   # samp : the matrix containing draws from N(0, 1). Used to generate proposals and store the MC.
+   # ar_step : a random uniform draw used at the accpet-reject step
+   # sigma : proposal standard deviation
+ 
+   acc_prob <- 0        # keeps track of the no. of acceptances
+   samp[1, ] <- init
+ 
+   for(i in 2:N){
+ 
+     curr <- samp[i-1, ]                       # current state
+     prop <- samp[i-1, ] + sigma*samp[i, ]     # proposed state
+     temp <- sum(dnorm(L%*%prop, log = TRUE) - dnorm(L%*%curr, log = TRUE))
+     one_by_a <- exp(temp)/(1 + exp(temp))
+ 
+     if(ar_step[i] <= one_by_a){
+       samp[i, ] <- prop
+       acc_prob <- acc_prob + 1
+     }
+     else{
+       samp[i, ] <- curr
+     }
+   }
+ 
+   return(list(samp, acc_prob/N))
+ }
> 
> 
> #############################################
> # Parameters
> 
> M <- 1e2   # no. of iterations
> N <- 1e6  # length of the chain
> K <- 2000  # batch size
> sigma <- seq(0.3/sqrt(d), 0.5/sqrt(d), length.out = 51)
> 
> 
> ##############################################
> # Variables to store data
> 
> eff_bm <- matrix(0, nrow = M, ncol = length(sigma))      # Store the batch means se calculated using mcmcse package 
> eff_fc <- matrix(0, nrow = M, ncol = length(sigma))      # Stores first order autocorrelation
> eff_ct <- matrix(0, nrow = M, ncol = length(sigma))      # Stores estimate of convergence time (R&R 2001)
> eff_ess <- matrix(0, nrow = M, ncol = length(sigma))     # Stores multiESS()
> acc_rate <- matrix(0, nrow = M, ncol = length(sigma))    # Stores acceptance probabilities
> 
> # Number of cores
> detectCores()
[1] 6
> registerDoParallel(cores = detectCores()-2)
> 
> 
> doingReps <- function(j)
+ {
+   print(paste0("Doing for m = ", j))
+ 
+   set.seed(j)
+   xi <- matrix(rnorm(d*N, mean = 0, sd = 1), ncol = d)
+   prob <- runif(N)
+   init <- rmvnorm(1, mean = rep(0, d), sigma = E)
+ 
+   bm_j <- numeric(length = length(sigma))
+   fc_j <- numeric(length = length(sigma))
+   ct_j <- numeric(length = length(sigma))
+   ess_j <- numeric(length = length(sigma))
+   a_j <- numeric(length = length(sigma))
+ 
+   for(i in 1:length(sigma)){
+ 
+     samp <- sampler(samp = xi, ar_step = prob, init = init, sigma = sigma[i])
+     a_j[i] <- samp[[2]]
+ 
+     e <- mcse.multi(samp[[1]], r = 1, size = K)$cov
+     bm_j[i] <- mean(diag(e))
+     ess_j[i] <- multiESS(samp[[1]], covmat = e)
+ 
+     # minimum autocorrelation
+     C <- matrix(cor(samp[[1]][-1,], samp[[1]][-N,]), ncol = d, nrow = d)
+     fc_j[i] <- mean(diag(C))
+     ct_j[i] <- -1/log(C[1,1])
+ 
+     cat("\r", i)
+   }
+   
+   print(paste0("Done for m = ", j))
+   return(cbind(bm_j, fc_j, ct_j, ess_j, a_j))
+  
+ }
> 
> tic()
> foo <- foreach(j = 1:M) %dopar% 
+ {
+   doingReps(j)
+ }
[1] "Doing for m = 1"
[1] "Doing for m = 2"
[1] "Doing for m = 3"
[1] "Doing for m = 4"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 1"
[1] "Doing for m = 5"
 51[1] "Done for m = 2"
[1] "Doing for m = 6"
 51[1] "Done for m = 3"
[1] "Doing for m = 7"
 51[1] "Done for m = 4"
[1] "Doing for m = 8"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 5"
[1] "Doing for m = 9"
 51[1] "Done for m = 6"
[1] "Doing for m = 10"
 51[1] "Done for m = 7"
[1] "Doing for m = 11"
 51[1] "Done for m = 8"
[1] "Doing for m = 12"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 9"
[1] "Doing for m = 13"
 51[1] "Done for m = 10"
[1] "Doing for m = 14"
 51[1] "Done for m = 11"
[1] "Doing for m = 15"
 51[1] "Done for m = 12"
[1] "Doing for m = 16"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 13"
[1] "Doing for m = 17"
 51[1] "Done for m = 14"
[1] "Doing for m = 18"
 51[1] "Done for m = 15"
[1] "Doing for m = 19"
 51[1] "Done for m = 16"
[1] "Doing for m = 20"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 17"
[1] "Doing for m = 21"
 51[1] "Done for m = 18"
[1] "Doing for m = 22"
 51[1] "Done for m = 19"
[1] "Doing for m = 23"
 51[1] "Done for m = 20"
[1] "Doing for m = 24"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 21"
[1] "Doing for m = 25"
 51[1] "Done for m = 22"
[1] "Doing for m = 26"
 51[1] "Done for m = 23"
[1] "Doing for m = 27"
 51[1] "Done for m = 24"
[1] "Doing for m = 28"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 25"
[1] "Doing for m = 29"
 51[1] "Done for m = 27"
[1] "Doing for m = 31"
 51[1] "Done for m = 26"
[1] "Doing for m = 30"
 51[1] "Done for m = 28"
[1] "Doing for m = 32"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 29"
[1] "Doing for m = 33"
 51[1] "Done for m = 31"
[1] "Doing for m = 35"
 51[1] "Done for m = 30"
[1] "Doing for m = 34"
 51[1] "Done for m = 32"
[1] "Doing for m = 36"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51[1] "Done for m = 33"
[1] "Doing for m = 37"
 51[1] "Done for m = 35"
[1] "Doing for m = 39"
 51[1] "Done for m = 34"
[1] "Doing for m = 38"
 51[1] "Done for m = 36"
[1] "Doing for m = 40"
 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 37"
[1] "Doing for m = 41"
 50 51[1] "Done for m = 39"
[1] "Doing for m = 43"
 51[1] "Done for m = 38"
[1] "Doing for m = 42"
 1 51[1] "Done for m = 40"
[1] "Doing for m = 44"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 41"
[1] "Doing for m = 45"
 50 51[1] "Done for m = 43"
[1] "Doing for m = 47"
 51[1] "Done for m = 42"
[1] "Doing for m = 46"
 51[1] "Done for m = 44"
[1] "Doing for m = 48"
 1 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 45"
[1] "Doing for m = 49"
 50 51[1] "Done for m = 47"
[1] "Doing for m = 51"
 51[1] "Done for m = 46"
[1] "Doing for m = 50"
 1 51[1] "Done for m = 48"
[1] "Doing for m = 52"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 49"
[1] "Doing for m = 53"
 50 51[1] "Done for m = 51"
[1] "Doing for m = 55"
 51[1] "Done for m = 50"
[1] "Doing for m = 54"
 1 51[1] "Done for m = 52"
[1] "Doing for m = 56"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 53"
[1] "Doing for m = 57"
 50 51[1] "Done for m = 55"
[1] "Doing for m = 59"
 51[1] "Done for m = 54"
[1] "Doing for m = 58"
 1 51[1] "Done for m = 56"
[1] "Doing for m = 60"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 57"
[1] "Doing for m = 61"
 50 51[1] "Done for m = 59"
[1] "Doing for m = 63"
 51[1] "Done for m = 58"
[1] "Doing for m = 62"
 1 51[1] "Done for m = 60"
[1] "Doing for m = 64"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 61"
[1] "Doing for m = 65"
 50 51[1] "Done for m = 63"
[1] "Doing for m = 67"
 51[1] "Done for m = 62"
[1] "Doing for m = 66"
 1 51[1] "Done for m = 64"
[1] "Doing for m = 68"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 65"
[1] "Doing for m = 69"
 50 51[1] "Done for m = 67"
[1] "Doing for m = 71"
 51[1] "Done for m = 66"
[1] "Doing for m = 70"
 1 51[1] "Done for m = 68"
[1] "Doing for m = 72"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 69"
[1] "Doing for m = 73"
 50 51[1] "Done for m = 71"
[1] "Doing for m = 75"
 51[1] "Done for m = 70"
[1] "Doing for m = 74"
 1 51[1] "Done for m = 72"
[1] "Doing for m = 76"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 73"
[1] "Doing for m = 77"
 50 51[1] "Done for m = 75"
[1] "Doing for m = 79"
 51[1] "Done for m = 74"
[1] "Doing for m = 78"
 1 51[1] "Done for m = 76"
[1] "Doing for m = 80"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 77"
[1] "Doing for m = 81"
 50 51[1] "Done for m = 79"
[1] "Doing for m = 83"
 51[1] "Done for m = 78"
[1] "Doing for m = 82"
 1 51[1] "Done for m = 80"
[1] "Doing for m = 84"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 81"
[1] "Doing for m = 85"
 50 51[1] "Done for m = 83"
[1] "Doing for m = 87"
 51[1] "Done for m = 82"
[1] "Doing for m = 86"
 1 51[1] "Done for m = 84"
[1] "Doing for m = 88"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 85"
[1] "Doing for m = 89"
 50 51[1] "Done for m = 87"
[1] "Doing for m = 91"
 51[1] "Done for m = 86"
[1] "Doing for m = 90"
 1 51[1] "Done for m = 88"
[1] "Doing for m = 92"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 89"
[1] "Doing for m = 93"
 50 51[1] "Done for m = 91"
[1] "Doing for m = 95"
 51[1] "Done for m = 90"
[1] "Doing for m = 94"
 1 51[1] "Done for m = 92"
[1] "Doing for m = 96"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 21 22 22 23 22 23 23 24 23 24 24 25 24 25 25 26 25 26 26 27 26 27 27 28 27 28 28 29 28 29 29 30 29 30 30 31 30 31 31 32 31 32 32 33 32 33 33 34 33 34 34 35 34 35 35 36 35 36 36 37 36 37 37 38 37 38 38 39 38 39 39 40 39 40 40 41 40 41 41 42 41 42 42 43 42 43 43 44 43 44 44 45 44 45 45 46 45 46 46 47 46 47 47 48 47 48 48 49 48 49 49 50 49 50 50 51[1] "Done for m = 93"
[1] "Doing for m = 97"
 50 51[1] "Done for m = 95"
[1] "Doing for m = 99"
 51[1] "Done for m = 94"
[1] "Doing for m = 98"
 1 51[1] "Done for m = 96"
[1] "Doing for m = 100"
 1 1 2 1 2 2 3 2 3 3 4 3 4 4 5 4 5 5 6 5 6 6 7 6 7 7 8 7 8 8 9 8 9 9 10 9 10 10 11 10 11 11 12 11 12 12 13 12 13 13 14 13 14 14 15 14 15 15 16 15 16 16 17 16 17 17 18 17 18 18 19 18 19 19 20 19 20 20 21 20 21 21 22 22 21 22 23 23 22 23 24 24 23 24 25 25 24 25 26 26 25 26 27 27 26 27 28 28 27 28 29 29 28 29 30 30 29 30 31 31 30 31 32 32 31 32 33 33 32 33 34 34 33 34 35 35 34 35 36 36 35 36 37 37 36 37 38 38 37 38 39 39 38 39 40 40 39 40 41 41 40 41 42 42 41 42 43 43 42 43 44 44 43 44 45 45 44 45 46 46 45 46 47 47 46 47 48 48 47 48 49 49 48 49 50 50 49 50 51[1] "Done for m = 97"
 51[1] "Done for m = 99"
 50 51[1] "Done for m = 98"
 51[1] "Done for m = 100"
> 
> toc()
29849.077 sec elapsed
> 
> final.out <- array(unlist(foo), dim = c(length(sigma), 5, M))
> 
> 
> eff_bm <- t(final.out[,1, ])
> eff_fc <- t(final.out[,2, ])
> eff_ct <- t(final.out[,3, ])
> eff_ess <- t(final.out[,4, ])
> acc_rate <- t(final.out[,5, ])
> 
> #########################################
> # Save the results
> 
> res <- list(sigma, eff_bm, eff_fc, eff_ess, eff_ct, acc_rate)
> save(res, file = "ill_gaussian_16Aug")
> 
> # Plots
> pdf(file = "ill_gaussian_plots_16Aug.pdf")
> plot(sigma, colMeans(acc_rate), type = "l")
> plot(colMeans(acc_rate), colMeans(eff_bm), type = "l")
> plot(colMeans(acc_rate), colMeans(eff_fc), type = "l")
> plot(colMeans(acc_rate), colMeans(eff_ess), type = "l")
> plot(colMeans(acc_rate), colMeans(eff_ct), type = "l")
> dev.off()
null device 
          1 
> 
> 
> ############################################################################################################
> # END
> 
> proc.time()
      user     system    elapsed 
114062.192   4453.786  29849.498 
